[alembic]
# Path to migration script directory, relative to the main configuration file.
script_location = alembic

# Template used to name migration files.
# file_template = %%(rev)s_%%(slug)s

# Default timezone for dates specified without a timezone.
# Used by autogenerate and upgrade --sql.
# timezone = UTC

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# Database configuration
# Read from environment variable for flexibility
sqlalchemy.url = postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
# Example: sqlalchemy.url = postgresql://breachwatchuser:breachwatchpass@db:5432/breachwatchdb

# You can define multiple database connections here if needed
# [my_other_database]
# sqlalchemy.url = driver://user:pass@host/dbname

# Custom template options for migration file generation
# revision_environment = false
# sourceless = false
# output_encoding = utf-8

# Set to 'true' to run migrations in offline mode
# offline = false

# Post write hooks are Python scripts or modules that are run after
# a migration script is generated.
# post_write_hooks =

# Available hooks:
#   black: reformats the generated script using Black.
#   autopep8: reformats the generated script using autopep8.
#   isort: sorts imports in the generated script using isort.

[post_write_hooks]
# Enable black formatting if installed:
# hooks = black
# black.type = console
# black.entrypoint = black
# black.options = -l 79

# Enable isort formatting if installed:
# hooks = isort
# isort.type = console
# isort.entrypoint = isort
# isort.options = --profile black
