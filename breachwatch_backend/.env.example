# Example Environment Variables for BreachWatch Backend
# Rename this file to .env and fill in your actual values.

# Application Settings
ENVIRONMENT=development # development or production
LOG_LEVEL=INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL
APP_BASE_DIR=/app # IMPORTANT: Set this to the root directory inside the Docker container

# Database Configuration (PostgreSQL)
# Option 1: Provide full DATABASE_URL (Overrides individual components)
# DATABASE_URL=postgresql://breachwatchuser:breachwatchpass@db:5432/breachwatchdb

# Option 2: Provide individual components (used if DATABASE_URL is commented out or empty)
DB_USER=breachwatchuser
DB_PASSWORD=breachwatchpass
DB_HOST=db # Use 'db' for Docker Compose service name, 'localhost' for local manual setup
DB_PORT=5432
DB_NAME=breachwatchdb

# Redis Configuration (for Caching)
REDIS_HOST=redis # Use 'redis' for Docker Compose service name, 'localhost' for local manual setup
REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password # Uncomment and set if your Redis requires a password
REDIS_DB=0

# JWT Settings
# Generate a strong, random secret key for production! Use: openssl rand -hex 32
SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7 # Example - REPLACE THIS!
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30 # Default: 30 minutes

# Crawler Defaults (Can be overridden by specific job settings)
DEFAULT_USER_AGENT=BreachWatchResearchBot/1.0 (+https://your-research-contact-page.com) # Be polite!
REQUEST_TIMEOUT=15 # Default timeout for HTTP requests in seconds

# Output Location (Relative path will be resolved based on APP_BASE_DIR)
# Inside Docker, this path should exist within the container volume mapping.
# The default setup maps ./breachwatch_backend/data to /app/data inside the container.
OUTPUT_LOCATIONS_DOWNLOADED_FILES=data/downloaded_files
